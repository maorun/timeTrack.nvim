name: Ci

on: [push]

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Stylua
        uses: JohnnyMorganz/stylua-action@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          version: latest
          args: --check .


  test:
    needs: lint
    name: Run Test
    runs-on: ${{ matrix.os }}
    permissions:
      contents: write
    strategy:
      matrix:
        os:
          - ubuntu-latest
          - macos-latest
    steps:
      - uses: actions/checkout@v4
        with:
          token: ${{ secrets.PAT }}
      - uses: rhysd/action-setup-vim@v1
        id: vim
        with:
          neovim: true
          version: nightly

      - name: Cache Lua installation
        uses: actions/cache@v4
        id: cache-luajit
        with:
          path: .lua/
          key: ${{ runner.os }}-lua-5.1
          restore-keys: |
            ${{ runner.os }}-lua-5.1

      - name: Setup Lua
        uses: leafo/gh-actions-lua@v11
        if: steps.cache-luajit.outputs.cache-hit != 'true'
        with:
          luaVersion: "5.1"

      - name: Cache Luarocks packages
        uses: actions/cache@v4
        id: cache-luarocks
        with:
          path: ~/.luarocks
          key: ${{ runner.os }}-lua-5.1-luarocks-${{ hashFiles('**/rockspec') }}
          restore-keys: |
            ${{ runner.os }}-lua-5.1-luarocks-

      - name: luarocks
        uses: leafo/gh-actions-luarocks@v5

      - name: install dependencies
        shell: bash
        run: |
          luarocks install vusted
          luarocks install luacov

      - name: run test
        shell: bash
        run: |
          lua -lluacov $(which vusted) ./test

      - name: Generate Luacov report
        run: luacov

      - name: Commit coverage report
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: 'chore(ci): update coverage report'
          file_pattern: luacov.report.out luacov.stats.out

  docs:
    needs: test
    runs-on: ubuntu-latest
    name: pandoc to vimdoc
    if: ${{ github.ref == 'refs/heads/master' }}
    permissions:
      # Give the default GITHUB_TOKEN write permission to commit and push the
      # added or changed files to the repository.
      contents: write
    steps:
      - uses: actions/checkout@v4
        with:
          token: ${{ secrets.PAT }}
      - name: panvimdoc
        uses: kdheepak/panvimdoc@main
        with:
          vimdoc: timeTrack.nvim
          treesitter: true
      - uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: 'chore(doc): auto generate docs'

